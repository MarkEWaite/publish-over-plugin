
#
# The MIT License
#
# Copyright (C) 2010-2011 by Anthony Robinson
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.
#

console.connecting=Connecting with configuration [{0}] ...
console.disconnecting=Disconnecting configuration [{0}] ...
console.transferredXFiles=Transferred {0} file(s)
console.publishFromHost.message=Connecting from host [{0}]
console.publishFromHost.unknown=Failed to get hostname [{0}]
console.notPerforming=Current build result is [{0}], not going to run.
console.retryDelay=Caught exception [{0}] Sleeping for [{1}]ms before trying again
console.paramPublish.skip=Skipping [{2}] - Label [{0}] does not match expression [{1}]
console.paramPublish.match=Publishing to [{2}] - Label [{0}] matches expression [{1}]

exception.normalizeDirectory=Failed to normalize base directory baseDirectory [{0}]
exception.removePrefix.noMatch=Failed to remove prefix from file named [{0}]. Prefix [{1}] must be present in all file paths
exception.badDateFormat=Could not create a date format from [{0}] exception message [{1}]
exception.failedToGetHostName=Failed to get host name
exception.remoteCallException=Exception when publishing, exception message [{0}]
exception.failedToFindConfiguration=Failed to find configuration named [{0}] check the global configuration
exception.flattenModeDuplicateFileName=Duplicate filename detected in flatten mode. Filename [{0}]
exception.failedToCreateDirectory=Could not create or change to directory. Directory [{0}]
exception.failedToGetEnvVars=Failed to get Environment Vars from build
exception.failedToGetPromotedBuild=Build is a Promotion, but failed to get the original build
exception.cwdRemoteRoot=Failed to change to remote directory [{0}]
exception.readFile=Failed to read file - filename [{0}] (relative to JENKINS_HOME if not absolute). Message: [{1}]
exception.invokeList=Exception calling FilePath.list. includes [{0}], excludes [{1}]
exception.invokeListNoDefaultExcludes=Exception calling FilePath.list. includes [{0}], excludes [{1}], noDefaultExcludes [{2}]
exception.baseDirectoryNotExist=The base directory does not exist. If this is a promotion, have you "Archived the artifacts"?
exception.retryDelayInterrupted=Interrupted whilst sleeping before retry
exception.paramPublish.noParameter=Failed to find parameter named [{0}]
exception.paramPublish.badPattern=Bad regular expression. Parameter name [{0}], value [{1}], message [{2}]

log.envVars.head=Environment Variables
log.envVars.pair=** {0}={1}
log.exceptionInPerform=An exception was caught when invoking perform
log.exceptionCaught.retrying=Exception caught. Retrying.
log.sourceFiles=Source files: configured [{0}], actual [{1}]
log.excludes=Excludes: configured [{0}], actual [{1}]
log.pathToFile=Relative path to file [{0}] is [{1}]

validator.safeName=Required. Cannot contain {0}
validator.optionalIP=Optional. Leave empty or enter an IP address (v4)
